{"version":3,"sources":["webpack:///./src/api/sockets.js?e9c6"],"names":["wsocket","openChannel","id","console","log","WebSocket","window","location","host","onmessage","data","JSON","parse","e","type","store","dispatch","addMessage","message","messages","forEach","o","closeChannel","close","sendMessage","text","user","pub_date","channel","send","stringify"],"mappings":";;;;;;;;;;;AAAA;AACA;AACA,IAAIA,OAAJ;;AAEO,SAASC,WAAT,CAAqBC,EAArB,EAAwB;AAC3BC,YAAQC,GAAR,CAAY,8BAA4BF,EAAxC;AACAF,cAAU,IAAIK,SAAJ,CAAc,UAASC,OAAOC,QAAP,CAAgBC,IAAzB,GAA+B,aAA/B,GAA6CN,EAA3D,CAAV;;AAEAF,YAAQS,SAAR,GAAoB,aAAK;AACrB,YAAIC,OAAOC,KAAKC,KAAL,CAAWC,EAAEH,IAAb,CAAX;AACA,gBAAQA,KAAKI,IAAb;AACI,iBAAK,YAAL;AAAmB;AACfC,oBAAA,uDAAAA,CAAMC,QAAN,CAAe,2FAAAC,CAAWP,KAAKQ,OAAhB,CAAf;AACA;AACH;AACD,iBAAK,eAAL;AAAsB;AAClBf,4BAAQC,GAAR,CAAY,4BAAZ,EAAyCM,IAAzC;AACAA,yBAAKS,QAAL,CAAcC,OAAd,CAAsB,UAACC,CAAD,EAAK;AACvBN,wBAAA,uDAAAA,CAAMC,QAAN,CAAe,2FAAAC,CAAWI,CAAX,CAAf;AACH,qBAFD;AAGA;AACH;AAXL;AAaH,KAfD;AAgBH;;AAEM,SAASC,YAAT,GAAuB;AAC1BnB,YAAQC,GAAR,CAAY,0BAAZ;AACCJ,YAAQuB,KAAR;AACJ;;AAEM,SAASC,WAAT,OAAuD;AAAA,QAAhCC,IAAgC,QAAhCA,IAAgC;AAAA,QAA1BC,IAA0B,QAA1BA,IAA0B;AAAA,QAApBC,QAAoB,QAApBA,QAAoB;AAAA,QAAVC,OAAU,QAAVA,OAAU;;AAC1D5B,YAAQ6B,IAAR,CAAalB,KAAKmB,SAAL,CAAe;AACxBhB,cAAM,YADkB;AAExBI,iBAAS;AACLO,kBAAMA,IADD;AAELC,kBAAMA,IAFD;AAGLC,sBAAUA,QAHL;AAILC,qBAASA;AAJJ;AAFe,KAAf,CAAb;AASH,C","file":"0.3aec1b267f3526134254.hot-update.js","sourcesContent":["import store from '../store'\nimport { addMessage } from '../actions/message'\nvar wsocket;\n\nexport function openChannel(id){\n    console.log(\"[socket] Opening channel \"+id)\n    wsocket = new WebSocket(\"ws://\"+ window.location.host +\"/websocket/\"+id)\n\n    wsocket.onmessage = e => {\n        let data = JSON.parse(e.data);\n        switch (data.type) {\n            case \"addMessage\": {\n                store.dispatch(addMessage(data.message));\n                break\n            }\n            case \"fetchMessages\": {\n                console.log(\"[socket] Fetching messages\",data)\n                data.messages.forEach((o)=>{\n                    store.dispatch(addMessage(o))\n                })\n                break\n            }\n        }\n    }\n}\n\nexport function closeChannel(){\n    console.log(\"[socket] Closing channel\")\n     wsocket.close()\n}\n\nexport function sendMessage({ text, user, pub_date, channel}) {\n    wsocket.send(JSON.stringify({\n        type: \"addMessage\",\n        message: {\n            text: text,\n            user: user,\n            pub_date: pub_date,\n            channel: channel\n        }\n    }))\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/api/sockets.js"],"sourceRoot":""}