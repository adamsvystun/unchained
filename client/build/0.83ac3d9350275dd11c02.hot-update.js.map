{"version":3,"sources":["webpack:///./src/api/sockets.js?e9c6"],"names":["wsocket","openChannel","id","WebSocket","window","location","host","closeChannel","close","send","msg","sendMessage","text","user","pub_date","channel","JSON","stringify","type","message","onmessage","data","parse","e","store","dispatch","addMessage","messages","forEach","o"],"mappings":";;;;;;;;;;;;AAAA;AACA;AACA,IAAIA,OAAJ;;AAEO,SAASC,WAAT,CAAqBC,EAArB,EAAwB;AAC1BF,cAAU,IAAIG,SAAJ,CAAc,UAASC,OAAOC,QAAP,CAAgBC,IAAzB,GAA+B,aAA/B,GAA6CJ,EAA3D,CAAV;AACJ;;AAEM,SAASK,YAAT,GAAuB;AACzBP,YAAQQ,KAAR;AACJ;;AAEM,SAASC,IAAT,CAAcC,GAAd,EAAmB;AACtBV,YAAQS,IAAR,CAAaC,GAAb;AACH;AACM,SAASC,WAAT,OAAuD;AAAA,QAAhCC,IAAgC,QAAhCA,IAAgC;AAAA,QAA1BC,IAA0B,QAA1BA,IAA0B;AAAA,QAApBC,QAAoB,QAApBA,QAAoB;AAAA,QAAVC,OAAU,QAAVA,OAAU;;AAC1Df,YAAQS,IAAR,CAAaO,KAAKC,SAAL,CAAe;AACxBC,cAAM,YADkB;AAExBC,iBAAS;AACLP,kBAAMA,IADD;AAELC,kBAAMA,IAFD;AAGLC,sBAAUA,QAHL;AAILC,qBAASA;AAJJ;AAFe,KAAf,CAAb;AASH;;AAEDf,QAAQoB,SAAR,GAAoB,aAAK;AACrB,QAAIC,OAAOL,KAAKM,KAAL,CAAWC,EAAEF,IAAb,CAAX;AACA,YAAQA,KAAKH,IAAb;AACI,aAAK,YAAL;AAAmB;AACfM,gBAAA,uDAAAA,CAAMC,QAAN,CAAe,2FAAAC,CAAWL,KAAKF,OAAhB,CAAf;AACA;AACH;AACD,aAAK,eAAL;AAAsB;AAClBE,qBAAKM,QAAL,CAAcC,OAAd,CAAsB,UAACC,CAAD,EAAK;AACvBH,oBAAA,2FAAAA,CAAWG,CAAX;AACH,iBAFD;AAGA;AACH;AAVL;AAYH,CAdD,C","file":"0.83ac3d9350275dd11c02.hot-update.js","sourcesContent":["import store from '../store'\nimport { addMessage } from '../actions/message'\nvar wsocket;\n\nexport function openChannel(id){\n     wsocket = new WebSocket(\"ws://\"+ window.location.host +\"/websocket/\"+id)\n}\n\nexport function closeChannel(){\n     wsocket.close()\n}\n\nexport function send(msg) {\n    wsocket.send(msg)\n}\nexport function sendMessage({ text, user, pub_date, channel}) {\n    wsocket.send(JSON.stringify({\n        type: \"addMessage\",\n        message: {\n            text: text,\n            user: user,\n            pub_date: pub_date,\n            channel: channel\n        }\n    }))\n}\n\nwsocket.onmessage = e => {\n    let data = JSON.parse(e.data);\n    switch (data.type) {\n        case \"addMessage\": {\n            store.dispatch(addMessage(data.message));\n            break\n        }\n        case \"fetchMessages\": {\n            data.messages.forEach((o)=>{\n                addMessage(o)\n            })\n            break\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/api/sockets.js"],"sourceRoot":""}