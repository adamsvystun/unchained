{"version":3,"sources":["webpack:///./src/containers/HomePage/index.js?317b"],"names":["HomePage","props","state","areas","locations","console","log","filter","o","i","length","id","setState","findArea","lat","coords","latitude","long","longitude","then","res","handleAreas","data","loc","navigator","geolocation","getCurrentPosition","consumeLocation","bind","location","dispatch","mapStateToProps","connect"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;;IAEMA,Q;;;AACF,sBAAYC,KAAZ,EAAkB;AAAA;;AAAA,wHACRA,KADQ;;AAEd,cAAKC,KAAL,GAAa;AACTC,mBAAO,EADE;AAETC,uBAAW;AAFF,SAAb;AAFc;AAMjB;;;;oCACWD,K,EAAM;AAAA;;AACdE,oBAAQC,GAAR,CAAY,UAAZ;AACAH,oBAAQA,MAAMI,MAAN,CAAa,UAACC,CAAD,EAAK;AACtB,qBAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAI,OAAKR,KAAL,CAAWE,KAAX,CAAiBO,MAArC,EAA6CD,GAA7C,EAAkD;AAC9C,wBAAG,OAAKR,KAAL,CAAWE,KAAX,CAAiBM,CAAjB,EAAoBE,EAApB,IAA0BH,EAAEG,EAA/B,EAAkC;AAC9B,+BAAO,KAAP;AACH;AACJ;AACD,uBAAO,IAAP;AACH,aAPO,CAAR;AAQA,iBAAKC,QAAL,CAAc,EAACT,OAAOA,KAAR,EAAd;AACH;;;wCACeK,C,EAAE;AAAA;;AACdK,YAAA,kFAAAA,CAAS;AACLC,qBAAKN,EAAEO,MAAF,CAASC,QADT;AAELC,sBAAMT,EAAEO,MAAF,CAASG;AAFV,aAAT,EAGGC,IAHH,CAGQ,UAACC,GAAD,EAAO;AACX,uBAAKC,WAAL,CAAiBD,IAAIE,IAArB;AACH,aALD;AAMA,iBAAKV,QAAL,CAAc,EAACW,KAAKf,CAAN,EAAd;AACH;;;sCACa;AACV,gBAAIgB,UAAUC,WAAd,EAA2B;AACvBD,0BAAUC,WAAV,CAAsBC,kBAAtB,CAAyC,KAAKC,eAAL,CAAqBC,IAArB,CAA0B,IAA1B,CAAzC;AACH,aAFD,MAEO;AACHvB,wBAAQC,GAAR,CAAY,+CAAZ;AACH;AACJ;;;iCACQ;AACLD,oBAAQC,GAAR,CAAY,WAAZ;AACA,gBAAIuB,WAAW,EAAf;AACA,mBACI;AAAA;AAAA,kBAAK,WAAU,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ;AAEI,4EAAC,qEAAD,IAAU,OAAO,KAAK5B,KAAL,CAAWE,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAHJ;AAII,4EAAC,yEAAD,IAAc,UAAU,KAAKF,KAAL,CAAW6B,QAAnC,EAA8C,OAAO,KAAK5B,KAAL,CAAWC,KAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAJJ,aADJ;AAQH;;;;EA/CkB,gD;;AAkDvB,SAAS4B,eAAT,CAAyB7B,KAAzB,EAAgC;AAC5B,WAAO,EAAEC,OAAOD,MAAMC,KAAf,EAAP;AACH;;AAED,yDAAe,mFAAA6B,CAAQD,eAAR,EAAyB/B,QAAzB,CAAf,E","file":"0.c5e70faedd3fa5893a65.hot-update.js","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport AreaList from '../../components/AreaList'\nimport OpenAreaList from '../../components/OpenAreaList';\nimport './styles.css';\nimport { findArea } from '../../api/area'\n\nclass HomePage extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            areas: [],\n            locations: null\n        }\n    }\n    handleAreas(areas){\n        console.log('handling')\n        areas = areas.filter((o)=>{\n            for (var i = 0; i < this.props.areas.length; i++) {\n                if(this.props.areas[i].id == o.id){\n                    return false\n                }\n            }\n            return true\n        })\n        this.setState({areas: areas})\n    }\n    consumeLocation(o){\n        findArea({\n            lat: o.coords.latitude,\n            long: o.coords.longitude\n        }).then((res)=>{\n            this.handleAreas(res.data)\n        })\n        this.setState({loc: o})\n    }\n    getLocation() {\n        if (navigator.geolocation) {\n            navigator.geolocation.getCurrentPosition(this.consumeLocation.bind(this))\n        } else {\n            console.log(\"Geolocation is not supported by this browser.\")\n        }\n    }\n    render() {\n        console.log('rendering')\n        var location = \"\"\n        return (\n            <div className=\"wrap\">\n                <div>Your areas</div>\n                <AreaList areas={this.props.areas} />\n                <div>Open areas</div>\n                <OpenAreaList dispatch={this.props.dispatch } areas={this.state.areas} />\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    return { areas: state.areas }\n}\n\nexport default connect(mapStateToProps)(HomePage)\n\n\n\n// WEBPACK FOOTER //\n// ./src/containers/HomePage/index.js"],"sourceRoot":""}