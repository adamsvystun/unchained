{"version":3,"sources":["webpack:///./src/App.js?a673","webpack:///./src/api/area.js?f2ea","webpack:///./src/containers/HomePage/index.js?317b"],"names":["Home","match","Area","Channel","App","getUserAreas","then","o","props","dispatch","addAreaAsync","area","connect","findArea","lat","long","axios","post","get","HomePage","state","areas","locations","getLocation","setState","coords","latitude","longitude","res","handleAreas","data","loc","navigator","geolocation","getCurrentPosition","consumeLocation","bind","console","log","filter","i","length","id","location","mapStateToProps"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAKA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,IAAMA,OAAO,SAAPA,IAAO;AAAA,QAAEC,KAAF,QAAEA,KAAF;AAAA,WAAc;AAAA;AAAA,UAAK,WAAU,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AACvB,oEAAC,mEAAD,IAAQ,OAAOA,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA,UADuB;AAEvB,oEAAC,qEAAD,IAAU,OAAOA,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAFuB,KAAd;AAAA,CAAb;AAIA,IAAMC,OAAO,SAAPA,IAAO;AAAA,QAAED,KAAF,SAAEA,KAAF;AAAA,WAAc;AAAA;AAAA,UAAK,WAAU,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AACvB,oEAAC,mEAAD,IAAQ,OAAOA,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA,UADuB;AAEvB,oEAAC,qEAAD,IAAU,OAAOA,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAFuB,KAAd;AAAA,CAAb;AAIA,IAAME,UAAU,SAAVA,OAAU;AAAA,QAAEF,KAAF,SAAEA,KAAF;AAAA,WAAc;AAAA;AAAA,UAAK,WAAU,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAC1B,oEAAC,mEAAD,IAAQ,OAAOA,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA,UAD0B;AAE1B,oEAAC,wEAAD,IAAa,OAAOA,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAF0B,KAAd;AAAA,CAAhB;;IAIMG,G;;;;;;;;;;;6CACkB;AAAA;;AAChBC,YAAA,sFAAAA,GAAeC,IAAf,CAAoB,UAACC,CAAD,EAAK;AACrB,uBAAKC,KAAL,CAAWC,QAAX,CAAoB,0FAAAC,CAAaC,IAAb,CAApB;AACH,aAFD;AAGH;;;iCACO;AACJ,mBACA;AAAC,uFAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACI;AAAA;AAAA,sBAAK,WAAU,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AACI,gFAAC,+DAAD,IAAO,WAAP,EAAa,YAAb,EAAoB,MAAK,GAAzB,EAA6B,WAAWX,IAAxC;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ;AAEI,gFAAC,+DAAD,IAAO,WAAP,EAAa,MAAK,aAAlB,EAAgC,WAAWE,IAA3C;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFJ;AAGI,gFAAC,+DAAD,IAAO,WAAP,EAAa,MAAK,8BAAlB,EAAiD,WAAWC,OAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAHJ;AADJ,aADA;AASH;;;;EAhBa,gD;;AAkBlB,yDAAe,mFAAAS,GAAUR,GAAV,CAAf,E;;;;;;;;;;;;AC9CA;;AAEO,SAASS,QAAT,OAAgC;AAAA,QAAZC,GAAY,QAAZA,GAAY;AAAA,QAAPC,IAAO,QAAPA,IAAO;;AACnC,WAAO,6CAAAC,CAAMC,IAAN,CAAW,YAAX,EAAyB;AAC5BH,aAAKA,GADuB;AAE5BC,cAAMA;AAFsB,KAAzB,CAAP;AAIH;;AAEM,SAASV,YAAT,GAAwB;AAC3B,WAAO,6CAAAW,CAAME,GAAN,CAAU,gBAAV,CAAP;AACH,C;;;;;;;;;;;;;;;;;;;;;;;;;;ACXD;AACA;AACA;AACA;AACA;AACA;;IAEMC,Q;;;AACF,sBAAYX,KAAZ,EAAkB;AAAA;;AAAA,wHACRA,KADQ;;AAEd,cAAKY,KAAL,GAAa;AACTC,mBAAO,EADE;AAETC,uBAAW;AAFF,SAAb;AAIA,cAAKC,WAAL;AANc;AAOjB;;;;oCACWF,K,EAAM;AACd,iBAAKG,QAAL,CAAc,EAACH,OAAOA,KAAR,EAAd;AACH;;;wCACed,C,EAAE;AAAA;;AACdM,YAAA,kFAAAA,CAAS;AACLC,qBAAKP,EAAEkB,MAAF,CAASC,QADT;AAELX,sBAAMR,EAAEkB,MAAF,CAASE;AAFV,aAAT,EAGGrB,IAHH,CAGQ,UAACsB,GAAD,EAAO;AACX,uBAAKC,WAAL,CAAiBD,IAAIE,IAArB;AACH,aALD;AAMA,iBAAKN,QAAL,CAAc,EAACO,KAAKxB,CAAN,EAAd;AACH;;;sCACa;AACV,gBAAIyB,UAAUC,WAAd,EAA2B;AACvBD,0BAAUC,WAAV,CAAsBC,kBAAtB,CAAyC,KAAKC,eAAL,CAAqBC,IAArB,CAA0B,IAA1B,CAAzC;AACH,aAFD,MAEO;AACHC,wBAAQC,GAAR,CAAY,+CAAZ;AACH;AACJ;;;iCACQ;AAAA;;AACL,gBAAIjB,QAAQ,KAAKD,KAAL,CAAWC,KAAX,CAAiBkB,MAAjB,CAAwB,UAAChC,CAAD,EAAK;AACrC,qBAAK,IAAIiC,IAAI,CAAb,EAAgBA,IAAI,OAAKhC,KAAL,CAAWa,KAAX,CAAiBoB,MAArC,EAA6CD,GAA7C,EAAkD;AAC9C,wBAAG,OAAKhC,KAAL,CAAWa,KAAX,CAAiBmB,CAAjB,EAAoBE,EAApB,IAA0BnC,EAAEmC,EAA/B,EAAkC;AAC9B,+BAAO,KAAP;AACH;AACJ;AACD,uBAAO,IAAP;AACH,aAPW,CAAZ;AAQA,gBAAIC,WAAW,EAAf;AACA,mBACI;AAAA;AAAA,kBAAK,WAAU,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ;AAEI,4EAAC,qEAAD,IAAU,OAAO,KAAKnC,KAAL,CAAWa,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAHJ;AAII,4EAAC,yEAAD,IAAc,UAAU,KAAKb,KAAL,CAAWC,QAAnC,EAA8C,OAAOY,KAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAJJ,aADJ;AAQH;;;;EA9CkB,gD;;AAiDvB,SAASuB,eAAT,CAAyBxB,KAAzB,EAAgC;AAC5B,WAAO,EAAEC,OAAOD,MAAMC,KAAf,EAAP;AACH;;AAED,yDAAe,mFAAAT,CAAQgC,eAAR,EAAyBzB,QAAzB,CAAf,E","file":"0.6f4edeffc25922a3a73d.hot-update.js","sourcesContent":["import React, { Component } from 'react'\nimport {\n  BrowserRouter as Router,\n  Route,\n  Link\n} from 'react-router-dom'\nimport { connect } from 'react-redux';\n\nimport Header from './components/Header'\nimport HomePage from './containers/HomePage'\nimport AreaPage from './containers/AreaPage'\nimport ChannelPage from './containers/ChannelPage'\n\nimport { addAreaAsync } from './actions/area'\nimport { getUserAreas } from './api/area'\n\nconst Home = ({match}) => (<div className=\"app-wrap\">\n    <Header match={match}/>\n    <HomePage match={match}/>\n</div>)\nconst Area = ({match}) => (<div className=\"app-wrap\">\n    <Header match={match}/>\n    <AreaPage match={match}/>\n</div>)\nconst Channel = ({match}) => (<div className=\"app-wrap\">\n    <Header match={match}/>\n    <ChannelPage match={match}/>\n</div>)\nclass App extends Component {\n    componentWillMount(){\n        getUserAreas().then((o)=>{\n            this.props.dispatch(addAreaAsync(area))\n        })\n    }\n    render(){\n        return (\n        <Router>\n            <div className=\"router-wrap\">\n                <Route exact strict path=\"/\" component={Home}/>\n                <Route exact path=\"/area/:area\" component={Area}/>\n                <Route exact path=\"/area/:area/channel/:channel\" component={Channel}/>\n            </div>\n        </Router>\n        )\n    }\n}\nexport default connect()(App)\n\n\n\n// WEBPACK FOOTER //\n// ./src/App.js","import axios from 'axios'\n\nexport function findArea({ lat, long}) {\n    return axios.post('/findArea/', {\n        lat: lat,\n        long: long\n    })\n}\n\nexport function getUserAreas() {\n    return axios.get('/getUserAreas/')\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/api/area.js","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport AreaList from '../../components/AreaList'\nimport OpenAreaList from '../../components/OpenAreaList';\nimport './styles.css';\nimport { findArea } from '../../api/area'\n\nclass HomePage extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            areas: [],\n            locations: null\n        }\n        this.getLocation()\n    }\n    handleAreas(areas){\n        this.setState({areas: areas})\n    }\n    consumeLocation(o){\n        findArea({\n            lat: o.coords.latitude,\n            long: o.coords.longitude\n        }).then((res)=>{\n            this.handleAreas(res.data)\n        })\n        this.setState({loc: o})\n    }\n    getLocation() {\n        if (navigator.geolocation) {\n            navigator.geolocation.getCurrentPosition(this.consumeLocation.bind(this))\n        } else {\n            console.log(\"Geolocation is not supported by this browser.\")\n        }\n    }\n    render() {\n        var areas = this.state.areas.filter((o)=>{\n            for (var i = 0; i < this.props.areas.length; i++) {\n                if(this.props.areas[i].id == o.id){\n                    return false\n                }\n            }\n            return true\n        })\n        var location = \"\"\n        return (\n            <div className=\"wrap\">\n                <div>Your areas</div>\n                <AreaList areas={this.props.areas} />\n                <div>Open areas</div>\n                <OpenAreaList dispatch={this.props.dispatch } areas={areas} />\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    return { areas: state.areas }\n}\n\nexport default connect(mapStateToProps)(HomePage)\n\n\n\n// WEBPACK FOOTER //\n// ./src/containers/HomePage/index.js"],"sourceRoot":""}