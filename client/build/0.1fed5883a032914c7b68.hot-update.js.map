{"version":3,"sources":["webpack:///./src/api/sockets.js?e9c6"],"names":["wsocket","WebSocket","window","location","host","console","log","onopen","onOpen","onerror","onError","e","send","msg","sendMessage","text","user","pub_date","channel","JSON","stringify","type","message","onmessage","data","parse","store","dispatch","addMessage","messages","forEach","o"],"mappings":";;;;;;;;;;AAAA;AACA;;AAEA,IAAIA,UAAU,IAAIC,SAAJ,CAAc,UAASC,OAAOC,QAAP,CAAgBC,IAAzB,GAA+B,aAA7C,CAAd;AACAC,QAAQC,GAAR,CAAYN,OAAZ;AACAA,QAAQO,MAAR,GAAiBC,MAAjB;AACAR,QAAQS,OAAR,GAAkBC,OAAlB;;AAEA,SAASF,MAAT,CAAgBG,CAAhB,EAAmB;AACfN,YAAQC,GAAR,CAAYK,CAAZ;AACH;AACD,SAASD,OAAT,CAAiBC,CAAjB,EAAoB;AAChBN,YAAQC,GAAR,CAAYK,CAAZ;AACH;AACM,SAASC,IAAT,CAAcC,GAAd,EAAmB;AACtBb,YAAQY,IAAR,CAAaC,GAAb;AACH;AACM,SAASC,WAAT,OAAuD;AAAA,QAAhCC,IAAgC,QAAhCA,IAAgC;AAAA,QAA1BC,IAA0B,QAA1BA,IAA0B;AAAA,QAApBC,QAAoB,QAApBA,QAAoB;AAAA,QAAVC,OAAU,QAAVA,OAAU;;AAC1DlB,YAAQY,IAAR,CAAaO,KAAKC,SAAL,CAAe;AACxBC,cAAK,YADmB;AAExBC,iBAAS;AACLP,kBAAMA,IADD;AAELC,kBAAMA,IAFD;AAGLC,sBAAUA,QAHL;AAILC,qBAASA;AAJJ;AAFe,KAAf,CAAb;AASH;;AAEDlB,QAAQuB,SAAR,GAAoB,aAAK;AACrB,QAAIC,OAAOL,KAAKM,KAAL,CAAWd,EAAEa,IAAb,CAAX;AACA,YAAQA,KAAKH,IAAb;AACI,aAAK,YAAL;AAAmB;AACfK,gBAAA,uDAAAA,CAAMC,QAAN,CAAe,2FAAAC,CAAWJ,KAAKF,OAAhB,CAAf;AACA;AACH;AACD,aAAK,eAAL;AAAsB;AAClBE,qBAAKK,QAAL,CAAcC,OAAd,CAAsB,UAACC,CAAD,EAAK;AACvBH,oBAAA,2FAAAA,CAAWG,CAAX;AACH,iBAFD;AAGA;AACH;AAVL;AAYH,CAdD,C","file":"0.1fed5883a032914c7b68.hot-update.js","sourcesContent":["import store from '../store'\nimport { addMessage } from '../actions/message'\n\nlet wsocket = new WebSocket(\"ws://\"+ window.location.host +\"/websocket1\")\nconsole.log(wsocket)\nwsocket.onopen = onOpen\nwsocket.onerror = onError\n\nfunction onOpen(e) {\n    console.log(e)\n}\nfunction onError(e) {\n    console.log(e)\n}\nexport function send(msg) {\n    wsocket.send(msg)\n}\nexport function sendMessage({ text, user, pub_date, channel}) {\n    wsocket.send(JSON.stringify({\n        type:\"addMessage\",\n        message: {\n            text: text,\n            user: user,\n            pub_date: pub_date,\n            channel: channel\n        }\n    }))\n}\n\nwsocket.onmessage = e => {\n    let data = JSON.parse(e.data);\n    switch (data.type) {\n        case \"addMessage\": {\n            store.dispatch(addMessage(data.message));\n            break\n        }\n        case \"fetchMessages\": {\n            data.messages.forEach((o)=>{\n                addMessage(o)\n            })\n            break\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/api/sockets.js"],"sourceRoot":""}